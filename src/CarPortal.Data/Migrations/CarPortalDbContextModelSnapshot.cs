// <auto-generated />
using System;
using CarPortal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarPortal.Data.Migrations
{
    [DbContext(typeof(CarPortalDbContext))]
    partial class CarPortalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CarPortal.Data.Entities.Car.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<double?>("EngineDisplacement")
                        .HasColumnType("float");

                    b.Property<int>("FuelTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("HorsePower")
                        .HasColumnType("int");

                    b.Property<bool>("IsBrandNew")
                        .HasColumnType("bit");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<int>("Mileage")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<int>("TransmissionTypeId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("FuelTypeId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("ModelId");

                    b.HasIndex("TransmissionTypeId");

                    b.HasIndex("VehicleCategoryId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Car.CarExtra", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("ExtraId")
                        .HasColumnType("int");

                    b.HasKey("CarId", "ExtraId");

                    b.HasIndex("ExtraId");

                    b.ToTable("CarsExtras");
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Car.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Red"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Blue"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Green"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Black"
                        },
                        new
                        {
                            Id = 5,
                            Name = "White"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Silver"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Grey"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Yellow"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Orange"
                        });
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Car.Extra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Extras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Leather seats"
                        },
                        new
                        {
                            Id = 2,
                            Name = "LED Headlights"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cruise Control"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Heated seats"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Navigation"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sunroof"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Premium sound system"
                        },
                        new
                        {
                            Id = 8,
                            Name = "7 seats"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Fogligths"
                        });
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Car.FuelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("FuelTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Gasoline"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Diesel"
                        },
                        new
                        {
                            Id = 3,
                            Name = "LPG"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Gasoline Hybrid"
                        },
                        new
                        {
                            Id = 5,
                            Name = "EV"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Methane"
                        });
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Car.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Volkswagen"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Audi"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Porsche"
                        },
                        new
                        {
                            Id = 4,
                            Name = "BMW"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Mercedes-Benz"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Opel"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Honda"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Toyota"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Subaru"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Volvo"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Citroen"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Peugeot"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Renault"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Fiat"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Alfa Romeo"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Ford"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Dacia"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Seat"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Kia"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Hyundai"
                        });
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Car.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ManufacturerId = 1,
                            Name = "Golf"
                        },
                        new
                        {
                            Id = 2,
                            ManufacturerId = 1,
                            Name = "Passat"
                        },
                        new
                        {
                            Id = 3,
                            ManufacturerId = 1,
                            Name = "Arteon"
                        },
                        new
                        {
                            Id = 4,
                            ManufacturerId = 1,
                            Name = "Polo"
                        },
                        new
                        {
                            Id = 5,
                            ManufacturerId = 1,
                            Name = "Toareg"
                        },
                        new
                        {
                            Id = 6,
                            ManufacturerId = 2,
                            Name = "A3"
                        },
                        new
                        {
                            Id = 7,
                            ManufacturerId = 2,
                            Name = "A4"
                        },
                        new
                        {
                            Id = 8,
                            ManufacturerId = 2,
                            Name = "A5"
                        },
                        new
                        {
                            Id = 9,
                            ManufacturerId = 2,
                            Name = "A6"
                        },
                        new
                        {
                            Id = 10,
                            ManufacturerId = 2,
                            Name = "A8"
                        },
                        new
                        {
                            Id = 11,
                            ManufacturerId = 2,
                            Name = "S3"
                        },
                        new
                        {
                            Id = 12,
                            ManufacturerId = 2,
                            Name = "RS4"
                        },
                        new
                        {
                            Id = 13,
                            ManufacturerId = 2,
                            Name = "RS6"
                        },
                        new
                        {
                            Id = 14,
                            ManufacturerId = 2,
                            Name = "R8"
                        },
                        new
                        {
                            Id = 15,
                            ManufacturerId = 3,
                            Name = "911"
                        },
                        new
                        {
                            Id = 16,
                            ManufacturerId = 3,
                            Name = "718"
                        },
                        new
                        {
                            Id = 17,
                            ManufacturerId = 3,
                            Name = "Panamera"
                        },
                        new
                        {
                            Id = 18,
                            ManufacturerId = 3,
                            Name = "Cayenne"
                        },
                        new
                        {
                            Id = 19,
                            ManufacturerId = 3,
                            Name = "Macan"
                        },
                        new
                        {
                            Id = 20,
                            ManufacturerId = 4,
                            Name = "3-series"
                        },
                        new
                        {
                            Id = 21,
                            ManufacturerId = 4,
                            Name = "5-series"
                        },
                        new
                        {
                            Id = 22,
                            ManufacturerId = 4,
                            Name = "7-series"
                        },
                        new
                        {
                            Id = 23,
                            ManufacturerId = 4,
                            Name = "X3"
                        },
                        new
                        {
                            Id = 24,
                            ManufacturerId = 4,
                            Name = "X5"
                        },
                        new
                        {
                            Id = 25,
                            ManufacturerId = 4,
                            Name = "X1"
                        },
                        new
                        {
                            Id = 26,
                            ManufacturerId = 4,
                            Name = "M3"
                        },
                        new
                        {
                            Id = 27,
                            ManufacturerId = 4,
                            Name = "M4"
                        },
                        new
                        {
                            Id = 28,
                            ManufacturerId = 4,
                            Name = "M5"
                        },
                        new
                        {
                            Id = 29,
                            ManufacturerId = 5,
                            Name = "A-class"
                        },
                        new
                        {
                            Id = 30,
                            ManufacturerId = 5,
                            Name = "C-class"
                        },
                        new
                        {
                            Id = 31,
                            ManufacturerId = 5,
                            Name = "E-class"
                        },
                        new
                        {
                            Id = 32,
                            ManufacturerId = 5,
                            Name = "S-class"
                        },
                        new
                        {
                            Id = 33,
                            ManufacturerId = 5,
                            Name = "G-class"
                        },
                        new
                        {
                            Id = 34,
                            ManufacturerId = 6,
                            Name = "Astra"
                        },
                        new
                        {
                            Id = 35,
                            ManufacturerId = 6,
                            Name = "Corsa"
                        },
                        new
                        {
                            Id = 36,
                            ManufacturerId = 6,
                            Name = "Signum"
                        },
                        new
                        {
                            Id = 37,
                            ManufacturerId = 6,
                            Name = "Vectra"
                        },
                        new
                        {
                            Id = 38,
                            ManufacturerId = 6,
                            Name = "Mokka"
                        },
                        new
                        {
                            Id = 39,
                            ManufacturerId = 7,
                            Name = "Civic"
                        },
                        new
                        {
                            Id = 40,
                            ManufacturerId = 7,
                            Name = "Accord"
                        },
                        new
                        {
                            Id = 41,
                            ManufacturerId = 7,
                            Name = "Jazz"
                        },
                        new
                        {
                            Id = 42,
                            ManufacturerId = 7,
                            Name = "CR-V"
                        },
                        new
                        {
                            Id = 43,
                            ManufacturerId = 7,
                            Name = "HR-V"
                        },
                        new
                        {
                            Id = 44,
                            ManufacturerId = 8,
                            Name = "Corolla"
                        },
                        new
                        {
                            Id = 45,
                            ManufacturerId = 8,
                            Name = "Auris"
                        },
                        new
                        {
                            Id = 46,
                            ManufacturerId = 8,
                            Name = "Yaris"
                        },
                        new
                        {
                            Id = 47,
                            ManufacturerId = 8,
                            Name = "LandCruiser"
                        },
                        new
                        {
                            Id = 48,
                            ManufacturerId = 8,
                            Name = "Avensis"
                        },
                        new
                        {
                            Id = 49,
                            ManufacturerId = 9,
                            Name = "Forester"
                        },
                        new
                        {
                            Id = 50,
                            ManufacturerId = 9,
                            Name = "Impreza"
                        },
                        new
                        {
                            Id = 51,
                            ManufacturerId = 9,
                            Name = "Legacy"
                        },
                        new
                        {
                            Id = 52,
                            ManufacturerId = 10,
                            Name = "V40"
                        },
                        new
                        {
                            Id = 53,
                            ManufacturerId = 10,
                            Name = "V60"
                        },
                        new
                        {
                            Id = 54,
                            ManufacturerId = 10,
                            Name = "XC40"
                        },
                        new
                        {
                            Id = 55,
                            ManufacturerId = 10,
                            Name = "XC60"
                        },
                        new
                        {
                            Id = 56,
                            ManufacturerId = 11,
                            Name = "C3"
                        },
                        new
                        {
                            Id = 57,
                            ManufacturerId = 11,
                            Name = "C4"
                        },
                        new
                        {
                            Id = 58,
                            ManufacturerId = 11,
                            Name = "C5"
                        },
                        new
                        {
                            Id = 59,
                            ManufacturerId = 11,
                            Name = "C6"
                        },
                        new
                        {
                            Id = 60,
                            ManufacturerId = 11,
                            Name = "C8"
                        },
                        new
                        {
                            Id = 61,
                            ManufacturerId = 12,
                            Name = "306"
                        },
                        new
                        {
                            Id = 62,
                            ManufacturerId = 12,
                            Name = "406"
                        },
                        new
                        {
                            Id = 63,
                            ManufacturerId = 12,
                            Name = "307"
                        },
                        new
                        {
                            Id = 64,
                            ManufacturerId = 12,
                            Name = "407"
                        },
                        new
                        {
                            Id = 65,
                            ManufacturerId = 12,
                            Name = "408"
                        },
                        new
                        {
                            Id = 66,
                            ManufacturerId = 13,
                            Name = "Clio"
                        },
                        new
                        {
                            Id = 67,
                            ManufacturerId = 13,
                            Name = "Megane"
                        },
                        new
                        {
                            Id = 68,
                            ManufacturerId = 13,
                            Name = "Laguna"
                        },
                        new
                        {
                            Id = 69,
                            ManufacturerId = 14,
                            Name = "Panda"
                        },
                        new
                        {
                            Id = 70,
                            ManufacturerId = 14,
                            Name = "500"
                        },
                        new
                        {
                            Id = 71,
                            ManufacturerId = 15,
                            Name = "156"
                        },
                        new
                        {
                            Id = 72,
                            ManufacturerId = 15,
                            Name = "147"
                        },
                        new
                        {
                            Id = 73,
                            ManufacturerId = 15,
                            Name = "159"
                        },
                        new
                        {
                            Id = 74,
                            ManufacturerId = 15,
                            Name = "GT"
                        },
                        new
                        {
                            Id = 75,
                            ManufacturerId = 15,
                            Name = "Guillia"
                        },
                        new
                        {
                            Id = 76,
                            ManufacturerId = 16,
                            Name = "Duster"
                        },
                        new
                        {
                            Id = 77,
                            ManufacturerId = 16,
                            Name = "Sandero"
                        },
                        new
                        {
                            Id = 78,
                            ManufacturerId = 17,
                            Name = "Ibiza"
                        },
                        new
                        {
                            Id = 79,
                            ManufacturerId = 17,
                            Name = "Toledo"
                        },
                        new
                        {
                            Id = 80,
                            ManufacturerId = 17,
                            Name = "Leon"
                        },
                        new
                        {
                            Id = 81,
                            ManufacturerId = 17,
                            Name = "Ateca"
                        },
                        new
                        {
                            Id = 82,
                            ManufacturerId = 18,
                            Name = "Focus"
                        },
                        new
                        {
                            Id = 83,
                            ManufacturerId = 18,
                            Name = "Fiesta"
                        },
                        new
                        {
                            Id = 84,
                            ManufacturerId = 18,
                            Name = "F-150"
                        },
                        new
                        {
                            Id = 85,
                            ManufacturerId = 18,
                            Name = "Mondeo"
                        },
                        new
                        {
                            Id = 86,
                            ManufacturerId = 19,
                            Name = "Stinger"
                        },
                        new
                        {
                            Id = 87,
                            ManufacturerId = 19,
                            Name = "Ceed"
                        },
                        new
                        {
                            Id = 88,
                            ManufacturerId = 19,
                            Name = "Sportage"
                        },
                        new
                        {
                            Id = 89,
                            ManufacturerId = 20,
                            Name = "Tuscon"
                        },
                        new
                        {
                            Id = 90,
                            ManufacturerId = 20,
                            Name = "i30"
                        },
                        new
                        {
                            Id = 91,
                            ManufacturerId = 20,
                            Name = "i20"
                        },
                        new
                        {
                            Id = 92,
                            ManufacturerId = 20,
                            Name = "i10"
                        });
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Car.TransmissionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("TransmissionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Manual 5-speed"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Manual 4-speed"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Manual 6-speed"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Automatic"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Automatic-robot"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Dual-clutch automatic"
                        },
                        new
                        {
                            Id = 7,
                            Name = "CVT"
                        });
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Car.VehicleCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("VehicleCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sedan"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Estate"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Small SUV"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Large SUV"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Off-road SUV"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Coupe"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Hatchback"
                        });
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Offer.CarImage", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.ToTable("CarImage");
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Offer.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Varna",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Aksakovo",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Devnya",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Provadiya",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Kranevo",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sofia",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Pravets",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 8,
                            Name = "Pleven",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 9,
                            Name = "Belene",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 10,
                            Name = "Nikopol",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 11,
                            Name = "Levski",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 12,
                            Name = "Plovdiv",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 13,
                            Name = "Asenovgrad",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 14,
                            Name = "Rakovski",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 15,
                            Name = "Burgas",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 16,
                            Name = "Aytos",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 17,
                            Name = "Nesebar",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 18,
                            Name = "Veliko Turnovo",
                            RegionId = 6
                        },
                        new
                        {
                            Id = 19,
                            Name = "Svishtov",
                            RegionId = 6
                        },
                        new
                        {
                            Id = 20,
                            Name = "Gorna Oryahovica",
                            RegionId = 6
                        },
                        new
                        {
                            Id = 21,
                            Name = "Ruse",
                            RegionId = 7
                        },
                        new
                        {
                            Id = 22,
                            Name = "Byala",
                            RegionId = 7
                        },
                        new
                        {
                            Id = 23,
                            Name = "Tsar Kaloyan",
                            RegionId = 7
                        });
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Offer.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdditionalInfo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("CarPortalProfileId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ContactPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastEdited")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("OfferThumbnailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("CarPortalProfileId");

                    b.HasIndex("CityId");

                    b.HasIndex("OfferThumbnailId")
                        .IsUnique();

                    b.HasIndex("RegionId");

                    b.HasIndex("SellerId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Offer.OfferComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AuthorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CarPortalUserId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<int?>("OfferCommentId")
                        .HasColumnType("int");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("OfferCommentId");

                    b.HasIndex("OfferId");

                    b.ToTable("OfferComments");
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Offer.OfferThumbnail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OfferThumbnail");
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Offer.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Varna"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sofia"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pleven"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Plovdiv"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Burgas"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Veliko Turnovo"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Ruse"
                        });
                });

            modelBuilder.Entity("CarPortal.Data.Entities.User.CarPortalProfile", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CarPortalUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDealer")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePictureAdress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarPortalUserId")
                        .IsUnique();

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = "b477be35-f36e-4986-91a4-2af08b8aace9",
                            CarPortalUserId = "0f6ed7b5-ccd8-488b-a350-2aef1be56c0b",
                            CreatedDate = new DateTime(2022, 12, 19, 20, 6, 41, 562, DateTimeKind.Utc).AddTicks(4970),
                            IsDealer = false
                        },
                        new
                        {
                            Id = "840f8101-dba1-4559-af43-a15af74d321c",
                            CarPortalUserId = "6685d0bd-2872-4fb8-9ff9-8a6c0704c821",
                            CreatedDate = new DateTime(2022, 12, 19, 20, 6, 41, 562, DateTimeKind.Utc).AddTicks(4974),
                            IsDealer = false
                        },
                        new
                        {
                            Id = "69f4e8cc-b668-4bdc-9822-c6be05dbdc07",
                            CarPortalUserId = "1599b271-fc59-4726-a4a1-49e1ecc43b20",
                            CreatedDate = new DateTime(2022, 12, 19, 20, 6, 41, 562, DateTimeKind.Utc).AddTicks(4977),
                            IsDealer = true
                        },
                        new
                        {
                            Id = "243d758e-59b0-46bd-bc56-3b41c4adc264",
                            CarPortalUserId = "f0ee2dbc-6f89-4177-8c5d-5503d717ff2e",
                            CreatedDate = new DateTime(2022, 12, 19, 20, 6, 41, 562, DateTimeKind.Utc).AddTicks(4980),
                            IsDealer = false
                        });
                });

            modelBuilder.Entity("CarPortal.Data.Entities.User.CarPortalUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfileId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0f6ed7b5-ccd8-488b-a350-2aef1be56c0b",
                            AccessFailedCount = 10,
                            ConcurrencyStamp = "15581a01-e081-4038-90ad-1a804aa32218",
                            Email = "admin@carportal.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@CARPORTAL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEKVEq/L6u8qITw0ikRH+UvAfOCJCBtpLFCZW5hc/1c4t0HQR0sFxAooZP12J14E5Dg==",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e4e83cd7-a8a3-4f56-98cc-92045905c7df",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = "6685d0bd-2872-4fb8-9ff9-8a6c0704c821",
                            AccessFailedCount = 10,
                            ConcurrencyStamp = "6748fc8f-9e7f-4886-a564-49e87ddcae8f",
                            Email = "newsWriter@carportal.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "NEWSWRITER@CARPORTAL.COM",
                            NormalizedUserName = "NEWSWRITER",
                            PasswordHash = "AQAAAAEAACcQAAAAEH0sJv41BRzVcQ9VZElXqAmFDty1A4H0DMUdPmbHthAJFMXzEES7o6aDflTRrtdq9w==",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "75334a8b-8ff3-43a4-9a64-dbbbe3a835da",
                            TwoFactorEnabled = false,
                            UserName = "newsWriter"
                        },
                        new
                        {
                            Id = "1599b271-fc59-4726-a4a1-49e1ecc43b20",
                            AccessFailedCount = 10,
                            ConcurrencyStamp = "34c9cf69-c25d-4310-af56-71f9353982bd",
                            Email = "dealer@carportal.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "DEALER@CARPORTAL.COM",
                            NormalizedUserName = "DEALER",
                            PasswordHash = "AQAAAAEAACcQAAAAEHdwYFMvtQ+QbSYGDBfrqngd3jKlT2P+NnNbyY9hM8md/I4t7pB7F8n8f2OjHE5TIg==",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c6622668-be6c-4dc9-8bfd-29e59021d61c",
                            TwoFactorEnabled = false,
                            UserName = "dealer"
                        },
                        new
                        {
                            Id = "f0ee2dbc-6f89-4177-8c5d-5503d717ff2e",
                            AccessFailedCount = 10,
                            ConcurrencyStamp = "a7f88131-7062-48dc-84ba-86e9529ff0c0",
                            Email = "regular@carportal.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "REGULAR@CARPORTAL.COM",
                            NormalizedUserName = "REGULAR",
                            PasswordHash = "AQAAAAEAACcQAAAAEFWgllERY63OavSr/2PU2wvFfJA+hnBdFuJUwSS/bkt+g9CaWggJ6OYAQPVN7whEHw==",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "32cffa64-872b-4f17-a72b-ffcc83ed909d",
                            TwoFactorEnabled = false,
                            UserName = "regular"
                        });
                });

            modelBuilder.Entity("CarPortal.Data.Entities.User.ProfileInterestedOffers", b =>
                {
                    b.Property<string>("CarPortalProfileId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("CarPortalProfileId", "OfferId");

                    b.HasIndex("OfferId");

                    b.ToTable("ProfilesInterestedOffers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Car.Car", b =>
                {
                    b.HasOne("CarPortal.Data.Entities.Car.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarPortal.Data.Entities.Car.FuelType", "FuelType")
                        .WithMany()
                        .HasForeignKey("FuelTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarPortal.Data.Entities.Car.Manufacturer", "Manufacturer")
                        .WithMany("Cars")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CarPortal.Data.Entities.Car.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarPortal.Data.Entities.Car.TransmissionType", "TransmissionType")
                        .WithMany()
                        .HasForeignKey("TransmissionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarPortal.Data.Entities.Car.VehicleCategory", "VehicleCategory")
                        .WithMany()
                        .HasForeignKey("VehicleCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("FuelType");

                    b.Navigation("Manufacturer");

                    b.Navigation("Model");

                    b.Navigation("TransmissionType");

                    b.Navigation("VehicleCategory");
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Car.CarExtra", b =>
                {
                    b.HasOne("CarPortal.Data.Entities.Car.Car", "Car")
                        .WithMany("Extras")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarPortal.Data.Entities.Car.Extra", "Extra")
                        .WithMany()
                        .HasForeignKey("ExtraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Extra");
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Car.Model", b =>
                {
                    b.HasOne("CarPortal.Data.Entities.Car.Manufacturer", "Manufacturer")
                        .WithMany("Models")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Offer.CarImage", b =>
                {
                    b.HasOne("CarPortal.Data.Entities.Offer.Offer", "Offer")
                        .WithMany("Images")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Offer.City", b =>
                {
                    b.HasOne("CarPortal.Data.Entities.Offer.Region", "Region")
                        .WithMany("Cities")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Offer.Offer", b =>
                {
                    b.HasOne("CarPortal.Data.Entities.Car.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarPortal.Data.Entities.User.CarPortalProfile", null)
                        .WithMany("PublishedOffers")
                        .HasForeignKey("CarPortalProfileId");

                    b.HasOne("CarPortal.Data.Entities.Offer.City", "City")
                        .WithMany("Offers")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CarPortal.Data.Entities.Offer.OfferThumbnail", "OfferThumbnail")
                        .WithOne("Offer")
                        .HasForeignKey("CarPortal.Data.Entities.Offer.Offer", "OfferThumbnailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CarPortal.Data.Entities.Offer.Region", "Region")
                        .WithMany("Offers")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarPortal.Data.Entities.User.CarPortalUser", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("City");

                    b.Navigation("OfferThumbnail");

                    b.Navigation("Region");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Offer.OfferComment", b =>
                {
                    b.HasOne("CarPortal.Data.Entities.User.CarPortalUser", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("CarPortal.Data.Entities.Offer.OfferComment", null)
                        .WithMany("Replies")
                        .HasForeignKey("OfferCommentId");

                    b.HasOne("CarPortal.Data.Entities.Offer.Offer", "Offer")
                        .WithMany()
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("CarPortal.Data.Entities.User.CarPortalProfile", b =>
                {
                    b.HasOne("CarPortal.Data.Entities.User.CarPortalUser", "CarPortalUser")
                        .WithOne("Profile")
                        .HasForeignKey("CarPortal.Data.Entities.User.CarPortalProfile", "CarPortalUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarPortalUser");
                });

            modelBuilder.Entity("CarPortal.Data.Entities.User.ProfileInterestedOffers", b =>
                {
                    b.HasOne("CarPortal.Data.Entities.User.CarPortalProfile", "CarPortalProfile")
                        .WithMany("SavedOffers")
                        .HasForeignKey("CarPortalProfileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CarPortal.Data.Entities.Offer.Offer", "Offer")
                        .WithMany("UsersInterested")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CarPortalProfile");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CarPortal.Data.Entities.User.CarPortalUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CarPortal.Data.Entities.User.CarPortalUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarPortal.Data.Entities.User.CarPortalUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CarPortal.Data.Entities.User.CarPortalUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Car.Car", b =>
                {
                    b.Navigation("Extras");
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Car.Manufacturer", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Models");
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Offer.City", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Offer.Offer", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("UsersInterested");
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Offer.OfferComment", b =>
                {
                    b.Navigation("Replies");
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Offer.OfferThumbnail", b =>
                {
                    b.Navigation("Offer")
                        .IsRequired();
                });

            modelBuilder.Entity("CarPortal.Data.Entities.Offer.Region", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("Offers");
                });

            modelBuilder.Entity("CarPortal.Data.Entities.User.CarPortalProfile", b =>
                {
                    b.Navigation("PublishedOffers");

                    b.Navigation("SavedOffers");
                });

            modelBuilder.Entity("CarPortal.Data.Entities.User.CarPortalUser", b =>
                {
                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
